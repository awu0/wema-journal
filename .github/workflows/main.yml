# This is a workflow to test and deploy our demo app.

name: Demo CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
  pull_request:
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PYTHONPATH: /home/runner/work/wema-journal/wema-journal/
  CLOUD_MONGO: 1
  DB_USERNAME: admin
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_CLUSTER: cluster0.mk19c.mongodb.net
  DB_OPTIONS: '?retryWrites=true&w=majority&appName=Cluster0'
  LOCAL_DB_PORT: 27017


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: pa_deploy

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.9'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install MongoDB in a Docker container.
        uses: supercharge/mongodb-github-action@1.8.0

      - name: Install Python packages.
        run: make dev_env

      - name: Run Python tests.
        run: make all_tests
        
      - name: Deploy to PythonAnywhere
        run: |
          chmod +x rebuild.sh
          ./rebuild.sh
        env:
          PA_USER: ${{ secrets.PA_USER }}
          PA_DOMAIN: ${{ secrets.PA_DOMAIN }}
          VENV: ${{ secrets.PA_VENV }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
